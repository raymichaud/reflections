How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    Isolating just the differences make the discrepancy stand out more.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    It allows you to go backwards and to branch out in a new direction from a point
    in the past.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Manually committing allows you to isolate and document specific features,
    fixes, or changes. If my versions were saved automatically I would not
    have the same control, although it would be good in the case that I don't
    perform regular commits.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    I don't know why they work like that, but I do know I prefer the Git method
    because it allows me to make changes in all of the files that would be
    affected by a change I want to make and group it into a single commit.

How can you use the commands git log and git diff to view the history of files?

    git log will show you the commit history with the commit ids.
    git diff will show you the differences between two files.

How might using version control make you more confident to make changes that
could break something?

    It is easier to back out and get to the last working version.

Now that you have your workspace set up, what do you want to try using Git for?

    Being able to work on projects from wherever I am - work, home, etc.